import { useState, useEffect } from "react";
import "../App";
import { useForm } from "react-hook-form";
import { useLocation, useNavigate } from "react-router-dom";
import AddIcon from "@mui/icons-material/Add";
function Notes() {
  const { register, handleSubmit } = useForm();
  const [data, setData] = useState([]);
  const [reset, setReset] = useState();

  const navigate = useNavigate();

  const location = useLocation();
  const { state } = location || {};

  useEffect(() => {
    setTimeout(() => {
      fetchData(state);
    }, 500);
  }, [reset]);
  const fetchData = async (state) => {
    try {
      const response = await fetch("http://localhost:8081", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(state),
      });
      const result = await response.json();
      console.log(result);

      setData(result);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  const onSubmit = async (d) => {
    try {
      const response = await fetch("http://localhost:8081/add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(d), // Send form data as JSON
      });

      const result = await response.json();
      console.log(result);

      if (result === true) {
        fetchData(state);
      } else {
        navigate("/login");
      }
    } catch (error) {
      console.error("Error:", error);
    }
  };

  const handleDelete = async (d) => {
    alert(JSON.stringify(d));
    try {
      const response = await fetch("http://localhost:8081/delete", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(d), // Send form data as JSON
      });

      const result = await response.json();
      console.log(result);

      if (result === true) {
        fetchData(state);
      } else {
        navigate("/login");
      }
    } catch (error) {
      console.error("Error:", error);
    }
  };
  return (
    <div className="rounded p-16 h-3/4 gap-10  bg-purple-400 flex flex-col justify-center items-center">
      <div className="text-6xl">{state.username}</div>

      {data.map((d) => (
        <div className="flex bg-slate-400 items-center justify-center flex-row gap-2">
          <input type="checkbox" onClick={() => handleDelete(d)} id={d.id} />
          <p>{d.task}</p>
        </div>
      ))}

      <form
        onSubmit={handleSubmit(onSubmit)}
        className="flex items-center flex-row gap-1 h-14"
        method="post"
      >
        <input
          type="text"
          className="px-2 h-14 rounded-3xl"
          placeholder="Enter new item"
          {...register("newItem")}
          id={state.currentUserID}
        />
        <button
          onClick={setReset}
          className="bg-black h-10 flex items-center justify-center w-10 rounded-full hover:text-yellow-200"
          type="submit"
          id={state.currentUserID}
          variant="contained"
         
        ><AddIcon/></button>
      </form>
    </div>
  );
}
export default Notes;
